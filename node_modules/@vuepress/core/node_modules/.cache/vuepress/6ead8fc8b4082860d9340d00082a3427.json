{"remainingRequest":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!C:\\laragon\\www\\Charles-J-VuePress\\docs\\README.md?vue&type=template&id=c6f5370e&","dependencies":[{"path":"C:\\laragon\\www\\Charles-J-VuePress\\docs\\README.md","mtime":1598308922834},{"path":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\laragon\\www\\Charles-J-VuePress\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}